<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.study.demo01web.Mapper.EmployeeMapper">

    <!--当实体类字段与数据表字段不一致时，可以设置映射关系一一对应-->
    <resultMap id="updateEmps" type="com.study.demo01web.Pojo.Employee">
        <id property="id" column="id"></id>
        <result property="eName" column="eName"></result>
        <result property="gender" column="gender"></result>
        <!--不一致字段-->
        <result property="deptId" column="department_id"></result>
        <result property="email" column="email"></result>
        <result property="birth" column="birth"></result>
    </resultMap>

    <!--返回值类型和参数类型全路径名在properties文件中定义-->
    <select id="queryEmps" resultType="Employee">
      SELECT e.id,e.eName,e.gender,d.departmentName,e.email,e.birth FROM employee e,department d WHERE e.department_id = d.id ORDER BY id
    </select>
    <!--resultMap-->
    <select id="queryEmpById" resultMap="updateEmps">
      select * from employee where id = #{id} ORDER BY id
    </select>
    <insert id="addEmp" parameterType="Employee">
        insert  into employee (eName,email,gender,department_id,birth)
        values (#{eName},#{email},#{gender},#{deptId},#{birth})
    </insert>
    <update id="updateEmp" parameterType="Employee">
        update employee set eName=#{eName},email=#{email},gender=#{gender},birth=#{birth},department_id=#{deptId} where id =#{id}
    </update>
    <delete id="deleteEmp" parameterType="int">
        delete from employee where id = #{id}
    </delete>
</mapper>